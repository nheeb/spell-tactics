[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://biohwpkoakflf"]

[ext_resource type="Texture2D" uid="uid://s27nj01hmo71" path="res://Assets/Materials/Textures/dirt_albedo_seamless_2.jpeg" id="1_d147b"]

[sub_resource type="Shader" id="Shader_ferkc"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
#include \"res://Shaders/lib.gdshaderinc\"

uniform vec4 albedo_modulate : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;

uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_g,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
instance uniform float drain_progress: hint_range(0.0, 1.0, 0.1);



void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo = texture(texture_albedo,base_uv);
	albedo = vec4(mix(albedo.rgb, vec3(grayscale(albedo.rgb)), drain_progress), 1.0);
	ALBEDO = albedo_modulate.rgb * albedo.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_ferkc")
shader_parameter/albedo_modulate = Color(0.835294, 0.835294, 0.835294, 1)
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_d147b")
